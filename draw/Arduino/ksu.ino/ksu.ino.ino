// pins for right Etch-A-Sketch motor (up and down movement)
#define stp_right 2
#define dir_right 3 // set low to move downward
#define MS1_right 4 // set high for 1/8 microstep revolution
#define MS2_right 5 // set high for 1/8 microstep revolution
#define EN_right  6 // set low to allow motor control

// pins for left Etch-A-Sketch motor (left and right movement)
#define stp_left 9
#define dir_left 10 // set low to move leftward
#define MS1_left 11 // set high for 1/8 microstep revolution
#define MS2_left 12 // set high for 1/8 microstep revolution
#define EN_left  13 // set low to allow motor control

#define STEP_SIZE 18 // ratio of steps to pixels

/* Coordinates (X,Y)
 * Upper left corner is (0,0)
 * X increases to the right, Y increases downward
 */
int X;
int Y;
char user_input;

void setup() {
  // initialize pins for left motor
  pinMode(stp_left, OUTPUT);
  pinMode(dir_left, OUTPUT);
  pinMode(MS1_left, OUTPUT);
  pinMode(MS2_left, OUTPUT);
  pinMode(EN_left, OUTPUT);

  // initialize pins for right motor
  pinMode(stp_right, OUTPUT);
  pinMode(dir_right, OUTPUT);
  pinMode(MS1_right, OUTPUT);
  pinMode(MS2_right, OUTPUT);
  pinMode(EN_right, OUTPUT);

  //zeroCoordinates();

  Serial.begin(9600);
  Serial.println("Enter an option: ");
  Serial.println("(0) Take first step");
  Serial.println("(1) Start drawing");
  Serial.println("(2) Reset");
  Serial.println();

  resetEDPins(); //Set step, direction, microstep and enable pins to default states
}

void loop() {
    while(Serial.available()){
      user_input = Serial.read();
      if (user_input == '0'){
        // ADD FIRST STEP HERE
        takeSteps(53, 40);

      }
      else if (user_input =='1')
      {
        // ADD TAKE STEPS HERE
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(5, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(-1, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(5, 0);
        takeSteps(1, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(8, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, -1);
        takeSteps(-2, 0);
        takeSteps(1, 1);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(-1, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(1, -1);
        takeSteps(3, 0);
        takeSteps(4, -1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(1, 1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(1, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(2, 1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(1, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(1, 1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(2, 1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-6, 0);
        takeSteps(1, 1);
        takeSteps(6, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-6, 0);
        takeSteps(3, 1);
        takeSteps(3, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(1, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, -1);
        takeSteps(3, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(1, 1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(5, 0);
        takeSteps(0, 1);
        takeSteps(12, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -3);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(1, 0);
        takeSteps(0, -3);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(1, 0);
        takeSteps(0, -11);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(38, 0);
        takeSteps(0, 1);
        takeSteps(-11, 0);
        takeSteps(0, 1);
        takeSteps(-21, 0);
        takeSteps(0, -1);
        takeSteps(-5, 0);
        takeSteps(0, 1);
        takeSteps(4, 0);
        takeSteps(0, 1);
        takeSteps(-6, 0);
        takeSteps(0, -1);
        takeSteps(0, 2);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(1, 1);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(0, 2);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(0, 2);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(-1, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(-2, 3);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(1, -1);
        takeSteps(-3, 3);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-5, 0);
        takeSteps(0, 1);
        takeSteps(-8, 0);
        takeSteps(0, -1);
        takeSteps(-5, 0);
        takeSteps(0, -1);
        takeSteps(-6, 0);
        takeSteps(3, 1);
        takeSteps(2, 0);
        takeSteps(1, 1);
        takeSteps(4, 0);
        takeSteps(1, 1);
        takeSteps(8, 0);
        takeSteps(1, -1);
        takeSteps(3, 0);
        takeSteps(2, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(1, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(1, -1);
        takeSteps(1, 0);
        takeSteps(-3, 2);
        takeSteps(-4, -5);
        takeSteps(0, -4);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-5, 0);
        takeSteps(0, 1);
        takeSteps(-10, 0);
        takeSteps(0, -1);
        takeSteps(-6, 0);
        takeSteps(0, -1);
        takeSteps(-3, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(-3, 0);
        takeSteps(0, -1);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-3, 0);
        takeSteps(0, -2);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, -2);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, -4);
        takeSteps(-5, 0);
        takeSteps(0, 1);
        takeSteps(4, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(1, 1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(0, 2);
        takeSteps(-2, 0);
        takeSteps(1, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(1, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(1, 1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(1, 1);
        takeSteps(4, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(1, 1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(2, 1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(1, 1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(2, 1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(-1, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(10, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(0, -1);
        takeSteps(10, 0);
        takeSteps(0, -2);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 2);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(4, -2);
        takeSteps(0, -5);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(1, 0);
        takeSteps(0, -10);
        takeSteps(-58, 0);
        takeSteps(0, 1);
        takeSteps(57, 0);
        takeSteps(0, 1);
        takeSteps(-57, 0);
        takeSteps(-21, 11);
        takeSteps(-8, 2);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, 2);
        takeSteps(3, 0);
        takeSteps(1, -1);
        takeSteps(2, -1);
        takeSteps(1, 0);
        takeSteps(-5, 3);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -3);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -2);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(5, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(6, 0);
        takeSteps(0, -1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(11, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(-5, 0);
        takeSteps(-1, 1);
        takeSteps(-3, 0);
        takeSteps(-1, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(-2, 0);
        takeSteps(-1, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-6, 0);
        takeSteps(-1, 1);
        takeSteps(-1, 0);
        takeSteps(-1, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-5, 0);
        takeSteps(-1, 1);
        takeSteps(-1, 0);
        takeSteps(-1, 1);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-5, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, -1);
        takeSteps(1, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(1, -2);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(-1, 1);
        takeSteps(4, -4);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(1, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(2, -1);
        takeSteps(1, -1);
        takeSteps(1, 0);
        takeSteps(1, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(5, 0);
        takeSteps(1, -1);
        takeSteps(1, 0);
        takeSteps(1, -1);
        takeSteps(2, 0);
        takeSteps(1, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(2, 0);
        takeSteps(1, -1);
        takeSteps(2, 0);
        takeSteps(1, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(5, 0);
        takeSteps(0, -1);
        takeSteps(5, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(1, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(9, 0);
        takeSteps(0, -2);
        takeSteps(-9, 0);
        takeSteps(1, 3);
        takeSteps(8, 0);
        takeSteps(1, -1);
        takeSteps(0, -2);
        takeSteps(14, 0);
        takeSteps(0, 1);
        takeSteps(12, 0);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(0, 1);
        takeSteps(-5, 0);
        takeSteps(0, -1);
        takeSteps(-13, 0);
        takeSteps(0, -1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(1, 1);
        takeSteps(12, 0);
        takeSteps(2, 1);
        takeSteps(5, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(4, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(1, 1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, 1);
        takeSteps(6, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(-3, 0);
        takeSteps(0, -1);
        takeSteps(-1, 1);
        takeSteps(-1, 0);
        takeSteps(2, 1);
        takeSteps(2, 0);
        takeSteps(1, 1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -2);
        takeSteps(3, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 2);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(0, 1);
        takeSteps(5, 0);
        takeSteps(0, -1);
        takeSteps(4, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(2, 1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -2);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(13, 0);
        takeSteps(0, 1);
        takeSteps(-12, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(-1, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(1, -1);
        takeSteps(1, 0);
        takeSteps(1, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(11, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -2);
        takeSteps(-1, 0);
        takeSteps(2, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(1, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(5, 0);
        takeSteps(0, 1);
        takeSteps(-5, 0);
        takeSteps(1, 1);
        takeSteps(5, 0);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(2, 1);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(0, 4);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(1, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(0, -2);
        takeSteps(0, 3);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(0, 2);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(0, 2);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(-3, 3);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(1, -1);
        takeSteps(1, 0);
        takeSteps(-4, 2);
        takeSteps(-1, 0);
        takeSteps(-6, 12);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 2);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(-1, 1);
        takeSteps(-8, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(7, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-6, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-5, 0);
        takeSteps(0, 1);
        takeSteps(-9, 0);
        takeSteps(0, -1);
        takeSteps(-4, 0);
        takeSteps(0, -2);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-2, 0);
        takeSteps(0, -2);
        takeSteps(-1, 0);
        takeSteps(0, -2);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, -2);
        takeSteps(-1, 0);
        takeSteps(0, -5);
        takeSteps(-7, 0);
        takeSteps(0, -1);
        takeSteps(-9, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-10, 0);
        takeSteps(0, 1);
        takeSteps(-6, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(0, 1);
        takeSteps(5, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -2);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -2);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(5, 0);
        takeSteps(0, -1);
        takeSteps(12, 0);
        takeSteps(0, 1);
        takeSteps(-11, 0);
        takeSteps(-1, 1);
        takeSteps(-4, 0);
        takeSteps(-1, 1);
        takeSteps(-2, 0);
        takeSteps(-6, 2);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-8, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(5, 0);
        takeSteps(-3, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(1, -1);
        takeSteps(-3, 2);
        takeSteps(-1, 1);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(0, 1);
        takeSteps(4, 0);
        takeSteps(-1, 1);
        takeSteps(-4, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(1, -1);
        takeSteps(-1, 4);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(0, 2);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 7);
        takeSteps(2, 0);
        takeSteps(0, -7);
        takeSteps(1, 0);
        takeSteps(0, 8);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, -2);
        takeSteps(0, 3);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(1, 1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(0, 2);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(1, 1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(0, 2);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(0, 2);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(0, 2);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 2);
        takeSteps(-4, 0);
        takeSteps(1, 1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -2);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(16, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-10, 0);
        takeSteps(0, -1);
        takeSteps(-2, 0);
        takeSteps(-1, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(11, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(0, 1);
        takeSteps(5, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-7, 0);
        takeSteps(2, 1);
        takeSteps(6, 0);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(1, 1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(1, 1);
        takeSteps(4, 0);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(2, 1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(1, 1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -3);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -2);
        takeSteps(1, 0);
        takeSteps(0, -7);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, -8);
        takeSteps(-1, 0);
        takeSteps(0, 3);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -3);
        takeSteps(2, -1);
        takeSteps(0, -3);
        takeSteps(1, 0);
        takeSteps(0, 2);
        takeSteps(1, -3);
        takeSteps(-5, 0);
        takeSteps(-2, 2);
        takeSteps(-5, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-5, 0);
        takeSteps(-1, 1);
        takeSteps(-9, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, -2);
        takeSteps(-3, 0);
        takeSteps(0, -2);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-2, 0);
        takeSteps(0, -2);
        takeSteps(-1, 0);
        takeSteps(0, -2);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, -6);
        takeSteps(-9, 0);
        takeSteps(0, 1);
        takeSteps(8, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(1, 1);
        takeSteps(1, 0);
        takeSteps(0, 3);
        takeSteps(1, 1);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(1, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(1, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(2, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(3, -2);
        takeSteps(2, 2);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(5, 0);
        takeSteps(0, -1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(5, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(-1, 1);
        takeSteps(4, 5);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(1, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(2, 1);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -3);
        takeSteps(1, 1);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(-1, 2);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, -1);
        takeSteps(-2, 3);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(1, -1);
        takeSteps(1, -1);
        takeSteps(-4, 4);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(3, 0);
        takeSteps(1, -1);
        takeSteps(-2, 2);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-4, 0);
        takeSteps(0, 1);
        takeSteps(5, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(1, -2);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 1);
        takeSteps(2, -3);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(1, -2);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(-15, 11);
        takeSteps(-6, 4);
        takeSteps(-1, 0);
        takeSteps(-2, 1);
        takeSteps(-3, 1);
        takeSteps(-2, 0);
        takeSteps(-32, -13);
        takeSteps(-2, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(-3, 2);
        takeSteps(-2, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(-3, 3);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(-1, 1);
        takeSteps(-3, 0);
        takeSteps(1, 1);
        takeSteps(4, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(-3, 4);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(-11, 7);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-1, 0);
        takeSteps(0, -1);
        takeSteps(-6, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, -1);
        takeSteps(1, 1);
        takeSteps(2, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
        takeSteps(3, 0);
        takeSteps(0, -1);
        takeSteps(5, 0);
        takeSteps(0, -1);
        takeSteps(1, 0);
        takeSteps(0, 2);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, -1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-3, 0);
        takeSteps(0, 1);
        takeSteps(-2, 0);
        takeSteps(0, 1);
        takeSteps(1, 0);
        takeSteps(0, 1);
        takeSteps(2, 0);
        takeSteps(0, -1);
       

      }
      resetEDPins();
  }
}

void takeSteps(int distX, int distY){
  // enabling motor control
  digitalWrite(EN_left, LOW);
  digitalWrite(EN_right, LOW);

  // setting to 1/8 microstep revolution
  digitalWrite(MS1_left, HIGH);
  digitalWrite(MS2_left, HIGH);
  digitalWrite(MS1_right, HIGH);
  digitalWrite(MS2_right, HIGH);

  X += distX * STEP_SIZE;
  Y += distY * STEP_SIZE;
  
  // calculate number of steps to take
  int stepsX = abs(distX * STEP_SIZE);
  int stepsY = abs(distY * STEP_SIZE);
  
  if(distX < 0){
    digitalWrite(dir_left, LOW);
  }
  else if(stepsX > 0){
    digitalWrite(dir_left, HIGH);
  }

  if(distY < 0){
    digitalWrite(dir_right, HIGH);
  }
  else if(distY > 0){
    digitalWrite(dir_right, LOW);
  }


  for(int i = max(stepsX, stepsY); i > 0; i--){
    if(stepsX != 0){
      digitalWrite(stp_left, HIGH);
      stepsX--;
    }
    if(stepsY != 0){
      digitalWrite(stp_right, HIGH);
      stepsY--;
    }
    delay(1);
    digitalWrite(stp_left,LOW);
    digitalWrite(stp_right,LOW); 
    delay(1);
  }

  while(stepsX != 0){
    digitalWrite(stp_left, HIGH);
    delay(1);
    digitalWrite(stp_left,LOW);
    delay(1);
  }
  
  while(stepsY != 0){
    digitalWrite(stp_right, HIGH);
    delay(1);
    digitalWrite(stp_right,LOW);
    delay(1);
  }
}

void resetEDPins()
{
  digitalWrite(stp_left, LOW);
  digitalWrite(dir_left, LOW);
  digitalWrite(MS1_left, LOW);
  digitalWrite(MS2_left, LOW);
  digitalWrite(EN_left, HIGH);
  digitalWrite(stp_right, LOW);
  digitalWrite(dir_right, LOW);
  digitalWrite(MS1_right, LOW);
  digitalWrite(MS2_right, LOW);
  digitalWrite(EN_right, HIGH);
}
